<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.phd.mapper.StudentInfoMapper">
  <resultMap id="BaseResultMap" type="com.phd.entity.StudentInfo">
    <result column="sid" jdbcType="INTEGER" property="sid" />
    <result column="sno" jdbcType="CHAR" property="sno" />
    <result column="sname" jdbcType="CHAR" property="sname" />
    <result column="spwd" jdbcType="CHAR" property="spwd" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
    <result column="stel" jdbcType="CHAR" property="stel" />
    <result column="sdor" jdbcType="CHAR" property="sdor" />
    <result column="sptel" jdbcType="CHAR" property="sptel" />
    <result column="coid" jdbcType="INTEGER" property="coid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sid, sno, sname, spwd, cid, stel, sdor, sptel, coid
  </sql>
  <select id="selectByExample" parameterType="com.phd.entity.StudentInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from studentinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.phd.entity.StudentInfoExample">
    delete from studentinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.phd.entity.StudentInfo">
    insert into studentinfo (sid, sno, sname, spwd, 
      cid, stel, sdor, sptel, 
      coid)
    values (#{sid,jdbcType=INTEGER}, #{sno,jdbcType=CHAR}, #{sname,jdbcType=CHAR}, #{spwd,jdbcType=CHAR}, 
      #{cid,jdbcType=INTEGER}, #{stel,jdbcType=CHAR}, #{sdor,jdbcType=CHAR}, #{sptel,jdbcType=CHAR}, 
      #{coid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.phd.entity.StudentInfo">
    insert into studentinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        sid,
      </if>
      <if test="sno != null">
        sno,
      </if>
      <if test="sname != null">
        sname,
      </if>
      <if test="spwd != null">
        spwd,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="stel != null">
        stel,
      </if>
      <if test="sdor != null">
        sdor,
      </if>
      <if test="sptel != null">
        sptel,
      </if>
      <if test="coid != null">
        coid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="sno != null">
        #{sno,jdbcType=CHAR},
      </if>
      <if test="sname != null">
        #{sname,jdbcType=CHAR},
      </if>
      <if test="spwd != null">
        #{spwd,jdbcType=CHAR},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="stel != null">
        #{stel,jdbcType=CHAR},
      </if>
      <if test="sdor != null">
        #{sdor,jdbcType=CHAR},
      </if>
      <if test="sptel != null">
        #{sptel,jdbcType=CHAR},
      </if>
      <if test="coid != null">
        #{coid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.phd.entity.StudentInfoExample" resultType="java.lang.Long">
    select count(*) from studentinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update studentinfo
    <set>
      <if test="record.sid != null">
        sid = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.sno != null">
        sno = #{record.sno,jdbcType=CHAR},
      </if>
      <if test="record.sname != null">
        sname = #{record.sname,jdbcType=CHAR},
      </if>
      <if test="record.spwd != null">
        spwd = #{record.spwd,jdbcType=CHAR},
      </if>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.stel != null">
        stel = #{record.stel,jdbcType=CHAR},
      </if>
      <if test="record.sdor != null">
        sdor = #{record.sdor,jdbcType=CHAR},
      </if>
      <if test="record.sptel != null">
        sptel = #{record.sptel,jdbcType=CHAR},
      </if>
      <if test="record.coid != null">
        coid = #{record.coid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update studentinfo
    set sid = #{record.sid,jdbcType=INTEGER},
      sno = #{record.sno,jdbcType=CHAR},
      sname = #{record.sname,jdbcType=CHAR},
      spwd = #{record.spwd,jdbcType=CHAR},
      cid = #{record.cid,jdbcType=INTEGER},
      stel = #{record.stel,jdbcType=CHAR},
      sdor = #{record.sdor,jdbcType=CHAR},
      sptel = #{record.sptel,jdbcType=CHAR},
      coid = #{record.coid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>